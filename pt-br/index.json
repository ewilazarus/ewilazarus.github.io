[{"content":"Olá, leitores!\nComo um viciado em teclado, eu não consigo ficar muito tempo longe do computador. Na verdade, estou na segunda metade da minha licença-paternidade e ansioso para construir algo e ter um descanso das intermináveis fraldas sujas.\nA Ideia # Então, aqui está a ideia simples: Eu quero criar um programa CLI para fornecer utilitários que eu uso diariamente como engenheiro de software. A linguagem que vou usar é o Typescript. Os utilitários, ou recursos, que eu quero incluir na primeira versão são:\nCodificação/decodificação de strings Base64 Pretty printing/minificação de payloads JSON Comparação de dois arquivos Estes têm um escopo aceitável para começar, mas a intenção aqui é ter um conjunto em constante crescimento de utilitários que serão adicionados ao programa ao longo do tempo.\nMas, Gabe\u0026hellip; Typescript? Sério mesmo? Eu sei que você não é fã desse ecossistema. Por quê então?\nAlém da interface CLI que me permitirá integrá-lo ao meu fluxo de trabalho, que é fortemente baseado em terminal, quero criar esse \u0026ldquo;pacote\u0026rdquo; com interfaces bem definidas, para que os utilitários também possam ser consumidos por uma interface de usuário na web. E você sabe\u0026hellip; quando se trata do navegador, precisamos recorrer ao Typescript/Javascript.\nE quanto ao WASM?\nBem, eu ainda não me aprofundei nisso. Na verdade, isso poderia ser algo interessante para experimentar no futuro.\nEsse conjunto de ferramentas não vai contra a filosofia minimalista do UNIX de ter uma ferramenta específica para uma tarefa específica?\nSim.\nO Planejamento # Nomenclatura # Há um ditado de Phil Karlton no mundo da programação que diz que \u0026ldquo;há apenas duas coisas difíceis na Ciência da Computação: invalidação de cache e dar nomes às coisas\u0026rdquo;. Eu diria que erros off by one também são difíceis, embora isso seja uma conversa diferente.\nEu não acredito que essa iniciativa envolva lidar com cache, mas eu precisava de um nome para esse conjunto de ferramentas e depois de um pouco de reflexão (não muito profunda), decidi escolher ubt. Algumas razões por trás dessa escolha são:\nEu não conheço outra ferramenta chamada ubt, embora provavelmente já exista uma. (Note que se você for o criador do ubt genuíno, por favor, perdoe minha falta de originalidade!) Se você se esforçar o suficiente, isso é um mnemônico para \u0026ldquo;cinto de utilidades\u0026rdquo; Ergonomia # Ao ter apenas algumas letras, isso pode ser rapidamente invocado no prompt de comando e tem o potencial de criar alguma memória muscular para os datilógrafos.\nAlém disso, enquanto no mundo da CLI, quero que cada utilitário seja invocado como um subcomando. Portanto, se considerarmos o conjunto de 3 utilitários que liste acima, esses podem ser b64, json e diff.\nDe fato, é possível dividir esses subcomandos em categorias distintas:\nUtilitários que recebem um parâmetro: b64, json Utilitário que recebe dois parâmetros: diff Para o primeiro caso, quero que o programa leia a entrada do stdin, para que possa interagir melhor com outras ferramentas. Por exemplo:\n$ echo \u0026#34;string a ser codificada em base64\u0026#34; | ubt b64 -e Por outro lado, para o segundo caso, usaremos argumentos posicionais:\n$ ubt diff \u0026lt;arquivo1\u0026gt; \u0026lt;arquivo2\u0026gt; A Estruturação Inicial # Para começar, vale mencionar que trabalhar em uma base de código Typescript já existente e configurar uma do zero são duas abordagens diferentes. Em minha opinião, o ecossistema Javascript é tremendamente fragmentado quando comparado a outros ecossistemas, como Go ou .NET — existem diversas maneiras e ferramentas para alcançar praticamente qualquer coisa que você possa imaginar. Até mesmo existe uma piada constante sobre o número de dias desde o último lançamento de um framework Javascript! Mas isso não é necessariamente um problema, desde que você esteja familiarizado com as opções disponíveis.\nDito isso, tenho que admitir que me diverti muito configurando o projeto.\nQuanto às ferramentas, escolhi utilizar:\nYarn para gerenciamento de dependências ESLint para análise de código Prettier para formatação Jest para testes Husky para ganchos do git bacanas Além disso, há também a transpilação do Typescript e suas configurações.\nA Execução # Temos todos os recursos e funcionalidades no lugar, mas ainda não temos código. Vamos analisar como as coisas foram construídas e por que foram construídas dessa maneira.\nEstrutura do Projeto # Optei por uma estrutura de diretórios \u0026ldquo;o mais plana possível\u0026rdquo;. Dadas as poucas restrições para esse domínio de problema, não quis superengenheirar o projeto.\nAqui está como fica o diretório src, com os arquivos de teste omitidos:\n$ tree src -I \u0026#39;*.test.ts\u0026#39; src ├── base64.ts ├── cli.ts ├── diff │ ├── index.ts │ └── stringFormatter.ts ├── index.ts └── json.ts 2 directories, 6 files O arquivo index.ts é o ponto de entrada do programa. Ele importa a fábrica de análise de linha de comando definida em cli.ts, cria uma instância dela para analisar os argumentos fornecidos.\nO arquivo cli.ts também é responsável por unir a funcionalidade definida em base64.ts, diff e json.ts.\nA única razão pela qual o diff difere (jogo de palavras intencional!) das outras funcionalidades, tendo uma pasta em vez de um único arquivo, é porque ele foi construído de maneira que permite extensões futuras. Suponha que queiramos que esse pacote seja usado nos bastidores por uma interface de usuário da web — poderíamos criar um htmlFormatter.ts, ou algo semelhante, e herdar das estruturas exportadas em diff/index.ts para permitir DRYness.\nDesenvolvimento Orientado a Testes # Decidi adotar um estilo de desenvolvimento TDD para este pequeno projeto.\nAlém de toda a evangelização que as pessoas fazem sobre o TDD na internet, para mim, o benefício mais subestimado é a sensação de progresso obtida pelo rápido feedback que você recebe. Você vê os testes falharem, implementa um pouco de funcionalidade, executa os testes novamente e depois os vê passar. Quando se trabalha sozinho em um projeto, isso é essencial.\nO segundo melhor efeito colateral dessa técnica é que você acaba com interfaces melhor definidas, já que você é obrigado, a priori, a escrever código de teste que atua como o artefato de software que vai consumir e invocar as funções/métodos em teste.\nNo entanto, para que o TDD seja eficaz, você precisa ter requisitos sólidos e bem definidos. Idealmente, você só começaria a implementá-lo após modelar o sistema ou passar por uma etapa de prototipagem, caso contrário, você acabaria tendo que gastar tempo descobrindo como seus componentes vão interagir uns com os outros e teria muito retrabalho corrigindo testes à medida que avança em direção à solução ideal.\nO Resultado # Utilização # Caso você queira usar esta ferramenta, você precisará de um gerenciador de pacotes Javascript.\nPara o yarn, você precisará executar o seguinte comando:\n$ yarn global add ubt No caso de estar usando o npm, você precisará executar o seguinte comando:\n$ npm install -g ubt Isso deve adicionar o script ubt como um executável no diretório de instalação do seu gerenciador de pacotes. Certifique-se de que esse diretório esteja disponível em seu $PATH, para que você possa invocar o comando de qualquer diretório em seu sistema de arquivos.\nReferências # Repositório no Github Pacote no Npm Obrigado por ler! Eu me diverti muito escrevendo este post no blog e criando essa ferramenta.\nFique ligado para mais!\n","date":"24 agosto 2023","permalink":"/pt-br/posts/cinto-de-utilidades-cli/","section":"Posts","summary":"Olá, leitores!","title":"Criando um Cinto de Utilidades CLI"},{"content":"","date":null,"permalink":"/pt-br/","section":"ewilogs","summary":"","title":"ewilogs"},{"content":"","date":null,"permalink":"/pt-br/tags/javascript/","section":"Tags","summary":"","title":"javascript"},{"content":"","date":null,"permalink":"/pt-br/tags/node/","section":"Tags","summary":"","title":"node"},{"content":"","date":null,"permalink":"/pt-br/tags/npm/","section":"Tags","summary":"","title":"npm"},{"content":"","date":null,"permalink":"/pt-br/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":null,"permalink":"/pt-br/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"/pt-br/tags/typescript/","section":"Tags","summary":"","title":"typescript"},{"content":"","date":null,"permalink":"/pt-br/tags/blogar/","section":"Tags","summary":"","title":"blogar"},{"content":"","date":null,"permalink":"/pt-br/tags/comunidade/","section":"Tags","summary":"","title":"comunidade"},{"content":"","date":null,"permalink":"/pt-br/tags/disciplina/","section":"Tags","summary":"","title":"disciplina"},{"content":"","date":null,"permalink":"/pt-br/tags/escrita/","section":"Tags","summary":"","title":"escrita"},{"content":"Olá, estimados leitores!\nEstou emocionado em dar as boas-vindas ao meu blog novinho em folha, uma tela digital onde pensamentos, ideias e experiências serão entrelaçados.\nEnquanto embarco nesta empolgante jornada, permitam-me um momento para compartilhar com vocês a essência de por que decidi mergulhar no mundo dos blogs.\nO Nascimento de um Blog # Num mundo cheio de informações, opiniões e histórias, me vejo ansiando por um espaço para chamar de meu — uma plataforma onde posso expressar meus pensamentos, refletir sobre as aventuras da vida e talvez até causar um impacto positivo em outras pessoas.\nEste blog representa um pedaço da minha vida, um santuário onde ideias podem florescer e conexões podem ser nutridas.\nUm Refúgio de Disciplina # Alguém poderia se perguntar, \u0026ldquo;Por que começar um blog agora?\u0026rdquo; A resposta reside no conceito de disciplina — um valor que considero caro e pretendo manter firmemente ao longo desta jornada de blogs.\nA vida, como sabemos, pode ficar bastante agitada, e compromissos tendem a oscilar como folhas ao vento. É aí que entra a disciplina.\nAo me comprometer com postagens regulares, não estou apenas me desafiando criativamente, mas também cultivando o hábito da consistência, que se estenderá para outras áreas da minha vida.\nContribuindo para a Comunidade # Como engenheiro que trabalha há mais de 10 anos com programação de computadores, tenho consumido postagens de blog de pessoas que reservam um tempo para compartilhar gotas de conhecimento.\nEssas postagens realmente me ajudaram a compreender conceitos, depurar problemas e resolver questões que talvez eu não conseguiria se elas não existissem.\nSinto que até hoje não fui capaz de retribuir à comunidade, e esta é outra razão pela qual quero começar este blog. Talvez eu possa ajudar alguém um dia.\nMelhorando Minha Escrita # Acredito que minhas habilidades de escrita estão longe de serem ótimas. Ao assumir o compromisso de postar frequentemente, precisarei me forçar a escrever mais e, portanto, espero melhorar nisso.\nAlém disso, também posso acabar aprimorando meu inglês e minhas habilidades de tradução, já que pretendo manter este blog bilíngue (inglês/português).\nEspero vê-los novamente. Até a próxima vez!\n","date":"18 agosto 2023","permalink":"/pt-br/posts/ola-mundo/","section":"Posts","summary":"Olá, estimados leitores!","title":"Olá, mundo!"},{"content":" Bem-vindo ao meu cantinho na internet!\nEstou feliz por recebê-lo no meu blog, onde compartilho um vislumbre da minha jornada. Meu nome é Gabriel Lima, e venho da paisagem vibrante e culturalmente rica do Rio de Janeiro, Brasil. Com 35 anos de juventude, a vida tem sido uma tapeçaria de experiências que estou ansioso para desdobrar.\nNutrir uma bela família ao lado da minha querida esposa, Erica, é uma pedra angular da minha alegria. Nosso maior presente, nosso filho Antonio, traz risos e amor sem limites para nossas vidas.\nDurante o dia, coloco o chapéu de engenheiro de software profissional, mergulhando profundamente nos reinos do desenvolvimento de backend, sistemas distribuídos e na arte intricada dos algoritmos. Minha jornada acadêmica me levou aos prestigiosos corredores da PUC-Rio, onde me formei em ciência da computação em 2014. Minha trajetória profissional percorreu domínios diversos, como estatísticas, comércio eletrônico, fintech, além de alguns projetos pessoais.\nQuando estou off-duty, meus maiores passa-tempos são:\nCorrida de rua Musculação Séries/Filmes Livros de ficção Vídeo games Praia Política brasileira Sua presença aqui enriquece este espaço digital, e estou animado para me conectar com vocês por meio de experiências compartilhadas.\n","date":"18 agosto 2023","permalink":"/pt-br/sobre/","section":"ewilogs","summary":"Bem-vindo ao meu cantinho na internet!","title":"Sobre"}]